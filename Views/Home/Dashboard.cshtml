@using Microsoft.AspNetCore.Identity
@using BugTrackerMVC.Services.Interfaces
@using BugTrackerMVC.Enums
@using BugTrackerMVC.Models.ChartModels

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService

@model BugTrackerMVC.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<!-- CSS for tables -->
<style>
    .amDark {
        background-color: #30303d;
        color: #fff;
    }

    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3"><span class="text-muted">@ViewContext.RouteData.Values["controller"]!.ToString()</span> / @ViewBag.Title</h4>

    <div>
        <div>
            <!-- Info Pills -->
            <div class="row mt-2">
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                        <div class="card bg-secondary">
                            <div class="card-body">
                                <div class="d-flex align-items-start justify-content-between">
                                    <div class="content-left text-white">
                                        <span>Projects</span>
                                        <div class="d-flex align-items-end mt-2">
                                            <h4 class="mb-0 me-2 text-dark">@Model.Projects!.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h4>
                                            @* Could put percentage here *@
                                        </div>
                                        <small>Active</small>
                                    </div>
                                    <span class="badge bg-label-dark rounded p-2">
                                        <i class="bx bxs-folder-open bx-sm"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-start justify-content-between">
                                    <div class="content-left">
                                        <span>Tickets</span>
                                        <div class="d-flex align-items-end mt-2">
                                            <h4 class="mb-0 me-2">@Model.Tickets!.Count()</h4>
                                        </div>
                                        <small>Total</small>
                                    </div>
                                    <span class="badge bg-label-primary rounded p-2">
                                        <i class="bx bxs-notepad bx-sm"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="card bg-warning">
                        <div class="card-body">
                            <div class="d-flex align-items-start justify-content-between">
                                <div class="content-left text-dark">
                                    <span>Tickets</span>
                                    <div class="d-flex align-items-end mt-2">
                                        <h4 class="mb-0 me-2">@Model.Tickets!.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h4>
                                    </div>
                                    <small>Unassigned</small>
                                </div>
                                <span class="badge bg-label-dark rounded p-2">
                                    <i class="bx bx-clipboard bx-sm"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="card bg-dark">
                        <div class="card-body">
                            <div class="d-flex align-items-start justify-content-between">
                                <div class="content-left text-light">
                                    <span>Data</span>
                                    <div class="d-flex align-items-end mt-2">
                                        <h4 class="mb-0 me-2">
                                            @(
                                                Model.Projects!.Count()
                                                + Model.Tickets!.Count()
                                                + Model.Members!.Count()
                                                )
                                        </h4>
                                    </div>
                                    <small>Totals</small>
                                </div>
                                <span class="badge bg-label-primary rounded p-2">
                                    <i class="bx bx-folder-plus bx-sm"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /Info Pills -->
            <!-- Charts -->
            <div class="row gy-2">
                <div class="col-md-12 col">
                    <!-- Google Charts-->
                    <div class="row col-cols-4 mt-5">
                        <div class="card col m-1 p-2">
                            <div class="card-body">
                                <h5>Projects by Priority</h5>
                                <p>[Google Charts]</p>
                                <div id="chart3D"></div>
                            </div>
                        </div>
                        <div class="card col m-1 p-2">
                            <div class="card-body">
                                <h5>Project Tickets Count (%)</h5>
                                <p>[Google Charts]</p>
                                <div id="donut"></div>
                            </div>
                        </div>
                        <!-- Morris Charts-->
                        <div class="card col m-1 p-2">
                            <div class="card-body">
                                <h5>Tickets by Priority</h5>
                                <p>[Morris Charts]</p>
                                <!-- Morris: Donut -->
                                <div class="col-md-12">
                                    <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                                </div>
                                <div class="col-md-12">
                                    <div class="chart chart-md" id="morrisTicketPriority"></div>
                                </div>
                            </div>
                        </div>
                        <!-- ChartJS -->
                        <div class="card col m-1 p-2">
                            <div class="card-body">
                                <h5>Tickets by Status</h5>
                                <p>[ChartJS]</p>
                                <!-- ChartJS: Pie/Doughnut -->
                                <div class="col-md-12">
                                    <!--  Chart.js Canvas Tag -->
                                    <canvas id="donutChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- AM Charts -->
            <div class="row gy-2">
                <div class="cols mt-5">
                    <div class="card col m-1 p-2">
                        <div class="card-body" style="height:600px">
                            <h5>Project: Tickets vs Developers</h5>
                            <p>[amCharts]</p>
                            <!-- HTML -->
                            <div id="chartdiv"></div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Plotly Charts -->
            <div class="row gy-2">
                <div class="cols mt-5">
                    <div class="card col m-1 p-2">
                        <div class="card-body" style="height:600px;overflow-y:auto;">
                            <h5>Project: Tickets vs Developers</h5>
                            <p>[Plotly]</p>
                            <!-- HTML -->
                            <div id="plotlyChart"></div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /Charts -->
        </div>
        <div class="mt-5 ">
            <div class="row">
                <!-- Projects Table -->
                <div class="col">
                    <div class="">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Projects</h2>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                    <table class="table table-hover" id="table_id">
                                        <thead class="">
                                            <tr>
                                                <th>Name</th>
                                                <th>StartDate</th>
                                                <th>EndDate</th>
                                                <th>Priority</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var project in Model.Projects!.OrderByDescending(d => d.EndDate))
                                            {
                                                <tr>
                                                    <td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black"><strong>@project.Name</strong></a></td>
                                                    <td><span style="font-size:small">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
                                                    <td><span style="font-size:small">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
                                                    <td><span class="badge bg-dark">@project.ProjectPriority!.Name</span></td>
                                                    <td>
                                                        <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i></a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Tickets Table -->
                <div class="col">
                    <div class="">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Tickets</h2>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                    <table class="table table-hover" id="table_id">
                                        <thead class="">
                                            <tr>
                                                <th>Title</th>
                                                <th>Developer</th>
                                                <th>Status</th>
                                                <th>Priority</th>
                                                <th>Date</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var ticket in Model.Tickets!.OrderByDescending(d => d.Created))
                                            {
                                                <tr>
                                                    <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                                    <td>
                                                        @if (ticket.DeveloperUserId != null)
                                                        {
                                                            @ticket.DeveloperUser?.FullName
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-warning text-dark">Unassigned</span>
                                                        }
                                                    </td>
                                                    @if (ticket.TicketStatus!.Name == "New")
                                                    {
                                                        <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name </span></td>
                                                    }
                                                    <td><span class="badge bg-dark">@ticket.TicketPriority!.Name </span></td>
                                                    <td><span style="font-size:small">@ticket.Created.ToString("MM-dd-yyyy")</span></td>
                                                    <td>
                                                        <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
                @*
                <div class="col-md-2 ">
                <div class="">
                <div class="card m-1 p-2">
                <div class="card-header">
                <h2>Members</h2>
                <hr />
                </div>
                <div class="card-body" style="overflow-y:auto;height:600px">
                @foreach (BTUser member in Model.Members!)
                {
                <div class="">
                <span style="font-weight:bold">@member.FullName</span>
                <h6>@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())</h6>
                </div>
                }
                </div>
                </div>
                </div>
                </div>*@
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <!--# Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //3D Pie
                    var options = {
                        title: 'Project Priority',
                        is3D: true,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }

                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Company Ticket Distribution',
                        pieHole: 0.3,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }
                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <!--# /Google Charts -->
    <!--# Morris Charts -->
    <!-- CDN for morris charts-->
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

        var morrisDonutData = [{
            label: "Low",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.Low)).Count()
                                                }, {
            label: "Medium",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.Medium)).Count()
                                                }, {
            label: "High",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.High)).Count()
                                                }, {
            label: "Urgent",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.Urgent)).Count()
                                                }];

        /*
        Morris: Donut
        */
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#legend').append(legendItem)
            });
        };
    </script>
    <!--# /Morris Charts -->
    <!--# ChartJS -->
    <!-- Pie/Donut -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>

        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatuses.Development)',
                '@nameof(BTTicketStatuses.New)',
                '@nameof(BTTicketStatuses.Resolved)',
                '@nameof(BTTicketStatuses.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name == nameof(BTTicketStatuses.Development)).Count(),
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name ==nameof(BTTicketStatuses.New)).Count(),
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name ==nameof(BTTicketStatuses.Resolved)).Count(),
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name ==nameof(BTTicketStatuses.Testing)).Count()
                                                            ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        };
        //Create pie or doughnut chart
        // You can switch between pie and doughnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        });
    </script>
    <!--# /ChartJS -->
    <!--# AM Charts -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes can be put here

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);

                    // Add data
                    chart.data = result;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;

                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;

                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = false;
                        valueLabel.label.truncate = false;

                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;
                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>
    <!--# /AM Charts -->
    <!--# Plotly -->
    <!-- Load plotly.js into the DOM -->
    <script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/PlotlyBarChart",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                var data = result;

                var layout = { barmode: 'group' };

                Plotly.newPlot('plotlyChart', data, layout);
            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>
    <!--# /Plotly -->
    <!-- Sneat Tables -->
    <script>
        $(document).ready(function () {
            $('#table_id').DataTable();
        });
    </script>
    }
