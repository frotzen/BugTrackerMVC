@using BugTrackerMVC.Models.ViewModels;
@using BugTrackerMVC.Services.Interfaces;
@using Microsoft.AspNetCore.Html;
@using Microsoft.AspNetCore.Mvc.Rendering;
@using Microsoft.AspNetCore.Identity;

@inject IBTTicketHistoryService HistoryService
@inject IBTFileService BTFileService
@inject UserManager<BTUser> UserManager

@model BugTrackerMVC.Models.ViewModels.TicketDetailsViewModel

@{
	ViewData["Title"] = "Details";
	BTUser btUser = await UserManager.GetUserAsync(User);
	string developerName = Model.Ticket!.DeveloperUser is null ? "unassigned" : Model.Ticket.DeveloperUser.FullName!;
}

<div class="container-xxl flex-grow-1 container-p-y mb-5">
	<h4 class="fw-bold py-3 mb-2"><span class="text-muted">@ViewContext.RouteData.Values["controller"]!.ToString()</span> / @ViewBag.Title</h4>
	<div class="row gy-2">
		<div class="col-md-12 col">
			<div class="row col-cols-2 mt-3">
				<div class="card col m-1 p-2">
					<div class="card-body">
						@*Title of Ticket*@
						<h5>@Html.DisplayFor(model => model.Ticket!.Title)</h5>
						<span><strong>Developer:</strong> @developerName</span><br/>
						<span><strong>Submitter:</strong> @Model.Ticket.SubmitterUser!.FullName</span><br/>

						@*Description of Ticket: *** NOTE: use Html.DeTag() remove html tags ****@
						<span><strong>Description: </strong>@Html.DeTag(Model.Ticket.Description!)</span>
						<div class="progress-container progress-info text-center m-b-25">
							@*Project Name and information*@
							<span class="progress-badge" style="font-size:small">Project Status</span>
							<div class="progress">
								@*Progress bar Razor code block logic*@
								@{
									var start = Model.Project!.StartDate;
									var end = Model.Project!.EndDate;
									var today = DateTime.Now;
									var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
								}
								<div class="progress-bar" 
									role="progressbar" 
									aria-valuenow="@percent"
									aria-valuemin="0"
									aria-valuemax="100"
									style="width: @percent%">

									@* Use Progress Bar code variable here *@
									<span class="progress-value">@percent%</span>
								</div>								
							</div>
						</div>
					</div>
				</div>
				<div class="card col m-1 p-2">
					<div class="card-body">
						<ul class="list-unstyled">
							@*Ticket date*@
							<li class="mb-1"><strong>Date Entered:</strong> <span class="">@Model.Ticket!.Created.ToString("MM/dd/yyyy hh:mm tt")</</span></li>
							@*Project end date*@
							<li class="mb-1"><strong>Deadline:</strong> <span class="">@Model.Project!.EndDate.ToString("MM/dd/yyyy hh:mm tt")</</span></li>
							@*Ticket type*@
							<li class="mb-1"><strong>Type:</strong> <span class="">@Html.DisplayFor(model => model.Ticket!.TicketType!.Name)</span></li>
							@*Ticket priority*@
							<li class="mb-1"><strong>Priority:</strong> <span class="">@Html.DisplayFor(model => model.Ticket!.TicketPriority!.Name)</span></li>
							@*Ticket status*@
							<li class="mb-1"><strong>Status:</strong> <span class="">@Html.DisplayFor(model => model.Ticket!.TicketStatus!.Name)</span></li>
						</ul>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-8 col col-cols-2 mt-5 ">
			<div class="col">
				<div class="">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Comments</h2>
						</div>
						<div class="card-body" style="overflow-y:auto;height:600px;">

							@*Form and Logic for authorized users to add comments*@
							<form asp-action="Details" method="post">
								<input asp-for="@Model.Ticket.Id" type="hidden"/>
								<input asp-for="@Model.Ticket.Title" type="hidden"/>
								<input asp-for="@Model.Ticket.Created" type="hidden"/>
								<input asp-for="@Model.Ticket.Updated" type="hidden"/>
								<input asp-for="@Model.Ticket.Archived" type="hidden"/>
								<input asp-for="@Model.Ticket.ArchivedByProject" type="hidden"/>
								<input asp-for="@Model.Ticket.ProjectId" type="hidden"/>
								<input asp-for="@Model.Ticket.TicketTypeId" type="hidden"/>
								<input asp-for="@Model.Ticket.TicketStatusId" type="hidden"/>
								<input asp-for="@Model.Ticket.TicketPriorityId" type="hidden"/>
								<input asp-for="@Model.Ticket.DeveloperUserId" type="hidden"/>
								<input asp-for="@Model.Ticket.SubmitterUserId" type="hidden"/>
								<input asp-for="@Model.Project.Id" type="hidden" />
								<input asp-for="@Model.Project.CompanyId" type="hidden" />
								<input asp-for="@Model.Project.Name" type="hidden" />
								<input asp-for="@Model.Project.Description" type="hidden" />
								<input asp-for="@Model.Project.Created" type="hidden" />
								<input asp-for="@Model.Project.StartDate" type="hidden" />
								<input asp-for="@Model.Project.EndDate" type="hidden" />
								<input asp-for="@Model.Project.ProjectPriorityId" type="hidden" />
								<input asp-for="@Model.Project.ImageFileData" type="hidden" />
								<input asp-for="@Model.Project.ImageFileType" type="hidden" />
								<input asp-for="@Model.Project.ImageFormFile" type="hidden" />
								<input asp-for="@Model.Project.Archived" type="hidden" />
								<input asp-for="@Model.TicketComments" type="hidden" />

								<div class="form-group">
									<label asp-for="TicketComment!.Comment" class="control-label"></label>
									<textarea asp-for="TicketComment!.Comment" class="form-control" rows="4"></textarea>
									<span asp-validation-for="TicketComment!.Comment" class="text-danger"></span>
								</div>
								@*<a class="btn btn-sm btn-outline-info" asp-action="AssignPM" asp-route-id="@item.Id">Assign Pm</a>*@
								<div class="form-group">
									<input type="submit" value="Save" class="btn btn-primary" />
								</div>


							</form>
							<hr />
							<h6>Comments</h6>
							<ul class="right_chat list-unstyled mb-1">
								@*Loop to show comments made for the Ticket*@
								@foreach(TicketComment comment in Model.TicketComments!)
								{
									<li>
										<div class="card mb-1">
											<span class="fw-bold">@comment.Created.ToString("MM/dd/yyyy hh:mm tt"):&nbsp;&nbsp;@comment.User.FullName</span>
										@comment.Comment
										</div>
									</li>
								}
							</ul>
						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
			<div class="col">
				<div class="">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Attachments</h2>
						</div>
						<div class="card-body" style="overflow-y:auto;height:300px;">

							@* Refer to the Ticket Attachments document for this section *@

							@* Ticket attachments part 1 here *@
							<div class="row clearfix">
								<div>
									<form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
										<div asp-validation-summary="ModelOnly" class="text-danger"></div>
										<input type="hidden" asp-for="@Model.Ticket!.Id" name="TicketId">
										<div class="media-body ml-3">
											<label>
												Description
												<input asp-for="@Model.Ticket!.Attachments.FirstOrDefault()!.Description" type="text" class="form-control" />
											</label><br />
											<label class="btn btn-outline-primary btn-sm">
												<input asp-for="@Model.Ticket!.Attachments.FirstOrDefault()!.FormFile" type="file" class="form-control-file" />
											</label>
											<button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
										</div>
									</form>
								</div>
							</div>


							@* Ticket attachments part 2 here *@
							<hr />
							<h6>Attachments</h6>
							<div class="container">
								<div class="row">
									@foreach (TicketAttachment item in Model.Ticket!.Attachments)
									{
										<div class="col col-sm-2">
											<a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
												<div class="icon">
													<img src="@BTFileService.GetFileIcon(item.FileName!)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
												</div>
											</a>
											<div style="font-size:x-small">
												<div class="file-name">
													<strong>@item.Description</strong>
												</div>
												<small>Size: @BTFileService.FormatFileSize(item.FileData!.Length) </small>
											</div>
										</div>
									}
								</div>
							</div>

						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-4 col mt-5 ">
			<div class="">
				<div class="card m-1 p-2">
					<div class="card-header">
						<h2>History</h2>
						<hr />
					</div>
					<div class="card-body" style="overflow-y:auto;height:1000px;">
						@*Loop to show the history entries for the Ticket*@
						@foreach (TicketHistory history in (await HistoryService.GetProjectTicketsHistoriesAsync(Model.Project.Id, Model.Project.CompanyId)).Where(i => i.TicketId == Model.Ticket.Id).OrderByDescending(x => x.Created))
						{
							<div class="card">
								<span>@history.Created.ToString("MM/dd/yyyy hh:mm tt")</span>
								@if (history.Description!.Contains("New Ticket Created"))
								{
									<div class="card-body"><strong>@history.User.FullName</strong> created this ticket.</div>
								}
								else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
								{
									<div class="card-body"><strong>@history.User.FullName</strong> added <b>@history.PropertyName</b>.</div>
								}
								else
								{
									// string example @($"Previous {history.PropertyName}:  ")
									<div class="card-body">
										<div>
											<strong>@history.User.FullName</strong> changed <b>@history.PropertyName</b> from
											<span style="color: red">@history.OldValue</span> to 
											<span style="color: green">@history.NewValue</span>
										</div>
									</div>
								}
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}