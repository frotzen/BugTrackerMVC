@using BugTrackerMVC.Models;
@using BugTrackerMVC.Enums;
@using BugTrackerMVC.Services.Interfaces;

@inject IBTTicketService TicketService
@inject IBTProjectService ProjectService
@inject IBTRolesService RolesService
@inject IBTTicketHistoryService HistoryService
@model BugTrackerMVC.Models.Project

@{
    ViewData["Title"] = "Details";
}

<div class="container-xxl flex-grow-1 container-p-y mb-5">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted">@ViewContext.RouteData.Values["controller"]!.ToString()</span> / @ViewBag.Title</h4>
    <div class="row gy-2">
        <div class="col-md-12 col">
            <div class="row col-cols-2 mt-5 bg-secondary">
                <div class="card col m-1 p-2">
                    <div class="card-body">
                        @* Project Name *@
                        <h5>@Html.DisplayFor(model => model.Name)</h5>
                        @*Description of Project: *** NOTE: remove html tags ****@
                        @{
                            var projectDescription = Html.Raw(Model.Description);
                        }
                        <p>@projectDescription</p>
                        <div class="progress-container progress-info text-center m-b-25">
                            <span class="progress-badge" style="font-size:small">Project Status</span>
                            <div class="progress">
                                @* Razor code block *@
                                @{
                                    var start = Model.StartDate;
                                    var end = Model.EndDate;
                                    var today = DateTime.Now;
                                    var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                }
                                <div class="progress-bar" role="progressbar" aria-valuenow="@percent" aria-valuemin="0" aria-valuemax="100" style="width: @percent%">
                                    @* Use Progress Bar code variable here *@
                                    <span class="progress-value">@percent%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card col m-1 p-2">
                    <div class="card-body">
                        <ul class=" list-unstyled basic-list">
                            <li>Start Date: <span class="">@Html.DisplayFor(model => model.StartDate)</span></li>
                            <li>Deadline: <span class="">@Html.DisplayFor(model => model.EndDate)</span></li>
                            <li>Priority: <span class="">@Html.DisplayFor(model => model.ProjectPriority!.Name)</span></li>
                            @* if() logic *@
                            [Project Active/Inactive]
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col mt-5 ">
            <div class="bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Project Manager</h2>
                        <hr />
                    </div>
                    <div class="body" style="overflow-y:auto;height:300px;">
                        @* use if() logic for Avatar/Default image etc *@
                        @{
                            BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
                            string pMName = projectManager is null ? "unassigned" : projectManager.FullName!;
                        }
                        @pMName
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col mt-5 ">
            <div class="bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Project Team</h2>
                        <hr />
                    </div>
                    <div class="body" style="overflow-y:auto;height:300px;">
                        <ul class="right_chat list-unstyled mb-0">
                            @foreach(BTUser member in Model.Members)
                            {
                                <li>@member.FullName</li>
                            }
                            @* Logic for avatars *@
                        </ul>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col mt-5 ">
            <div class="bg-dark">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Project Activity</h2>
                        <hr />
                    </div>
                    <div class="body" style="overflow-y:auto;height:300px;background-color:antiquewhite">
                        @* Project Activity loop *@
                        @foreach (TicketHistory history in (await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, Model.CompanyId)).OrderByDescending(x => x.Created))
                        {
                            <div class="">
                                @if (history.Description!.Contains("New Ticket Created"))
                                {
                                    <p>A ticket was added.</p>
                                }
                                else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
                                {
                                    <p>A <b>@history.PropertyName</b> was added.</p>
                                }
                                else
                                {
                                    <p>The ticket <b>@history.PropertyName</b> was edited.</p>
                                    <p>@($"Previous {history.PropertyName}:  ") <span style="color: red">@history.OldValue</span></p>
                                    <p>@($"Current {history.PropertyName}:  ") <span style="color: green">@history.NewValue</span></p>
                                }

                            </div>
                        }

                            

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 col">
            <div class="mt-5 bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Tickets</h2>
                    </div>
                    <div class="body">
                        <div class="table-responsive" style="overflow-y:auto;height:600px;">
                            <table class="table table-hover" id="table_id">
                                <thead class="">
                                    <tr>
                                        @* Table header *@
                                        <th>Title</th>
                                        <th>Developer</th>
                                        <th>Status</th>
                                        <th>Priority</th>
                                        <th>Date</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @* Table body *@

                                    @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                    {
                                        <tr>
                                            <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                            <td>
                                                @if (ticket.DeveloperUserId != null)
                                                {
                                                    @ticket.DeveloperUser?.FullName
                                                }
                                                else
                                                {
                                                    if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                                                    {
                                                        <a class="btn btn-xs btn-info" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-id="@ticket.Id">Assign Dev</a>
                                                    }

                                                }
                                            </td>
                                            @if (ticket.TicketStatus!.Name == "New")
                                            {
                                                <td><span class="text-success">@ticket.TicketStatus.Name </span></td>

                                            }
                                            else
                                            {
                                                <td><span class="text-black">@ticket.TicketStatus.Name </span></td>
                                            }
                                            <td><span class="">@ticket.TicketPriority!.Name </span></td>
                                            <td>@ticket.Created.ToString("MM-dd-yyyy")</td>
                                            <td>
                                                <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                                @*@if (ticket.DeveloperUserId == btUser.Id || ticket.DeveloperUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(BTRoles.Admin)))
                                            {
                                            <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-pencil"></i></a>
                                            }

                                            @if (User.IsInRole("Admin") || (projectManager?.Id == btUser.Id))
                                            {
                                            <a class="btn btn-sm btn-outline-danger"><i class="fs-5 bi-archive"></i></a>
                                            }*@
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#table_id').DataTable();
        });
    </script>
}

@*
<div>
    <h4>Project</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.EndDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.ImageFileData)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ImageFileData)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.ImageFileType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ImageFileType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.Archived)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Archived)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.Company)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Company.Name)
        </dd>
        @{
            BTUser? projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
        }
        <dt class="col-sm-2">
            Project Manager
        </dt>
        <dd class="col-sm-10">
            <text>@(projectManager?.FullName ?? "Unassigned")</text>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayFor(model => model.ProjectPriority)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProjectPriority!.Name)
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Description
            </th>
            <th>
                Created
            </th>
            <th>
                Updated
            </th>
            <th>
                Archived?
            </th>
            <th>
                Archived By Project?
            </th>
            <th>
                Ticket Priority
            </th>
            <th>
                Ticket Type
            </th>
            <th>
                Ticket Status
            </th>
            <th>
                Developer
            </th>
            <th>
                Submitter
            </th>
            <th></th>
        </tr>
    </thead>

    @{
        List<Ticket> tickets = await TicketService.GetAllTicketsByProjectIdAsync(@Model!.Id);
}
    <tbody>
        @foreach (Ticket ticket in tickets)
        {
            <tr>
                <td>
                    @ticket.Title
                </td>
                <td>
                    @ticket.Description
                </td>
                <td>
                    @ticket.Created
                </td>
                <td>
                    @ticket.Updated
                </td>
                <td>
                    <text>@(ticket.Archived ? "Yes" : "")</text>
                </td>
                <td>
                    <text>@(ticket.ArchivedByProject ? "Yes" : "")</text>
                </td>
                <td>
                    @ticket.TicketPriority.Name
                </td>
                <td>
                    @ticket.TicketType.Name
                </td>
                <td>
                    @ticket.TicketStatus.Name
                </td>
                <td>
                    @ticket.DeveloperUser?.FullName
                </td>
                <td>
                    @ticket.SubmitterUser.FullName
                </td>
                <td>
                    <a asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id">Edit</a> |
                    <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id">Details</a> |
                    @if (ticket.Archived == true)
                    {
                        <a asp-action="Restore" asp-controller="Tickets" asp-route-id="@ticket.Id">Restore</a>
                    }
                    else
                    {
                        <a asp-action="Archive" asp-controller="Tickets" asp-route-id="@ticket.Id">Archive</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
*@